name: Deploy

on:
  push:
    branches:
      - main

jobs:
  # Run continuous integration
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Message
        run: |
          echo "${{toJson(github)}}"
          echo "Running tests..."

      # This step uses the "actions/checkout@v4" action to check out the
      # code in the repository so that we can run tests and deploy the
      # application.
      - name: Checkout code
        uses: actions/checkout@v4

      # This step sets up the Node.js environment for the rest of the
      # workflow. Node.js is the JavaScript runtime that we use to run
      # our application.
      #
      # The "with" keyword is used to specify the Node.js version that
      # we want to use. In this case, we're using Node.js version 20.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  # Run continuous delivery
  build:
    # Can only run after the test job has completed
    # We can add more deployment jobs here if we need to
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Message
        run: echo "Building...."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Step 3: Restore npm cache
      - name: Restore npm cache
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      # Step 4: Install dependencies (if cache miss)
      - name: Install dependencies
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Build
        run: npm run build

      # Step 5: Upload build artifacts for deployment
      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist # Path to your built site directory

  deploy:
    # Can only run after the build job has completed
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      # Step 6: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
